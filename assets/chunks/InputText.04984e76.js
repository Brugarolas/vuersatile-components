import"./Icon.vue_vue_type_style_index_0_lang.4ed993c7.js";import{D as o,o as u,A as d,_ as c}from"./framework.2ef82e6b.js";import"./TextareaBase.vue_vue_type_style_index_0_lang.495c3f00.js";import{I as p}from"./InputBase.79a59676.js";import{V as h}from"./validations-input.3cab52d2.js";const m=(t,r)=>t.length===2&&r<2?t+"/":t,a=(t,r)=>{const e=t?`${Math.min(t,r)}`:"";return e<10&&t&&t.length===2?`0${e}`:e},f={methods:{formatDate(t){const r=t.replace(/\D/g,"");return[a(r.substr(0,2),31),a(r.substr(2,2),12),r.substr(4,4)].map(m).join("")}}};function y(t,r,e,s,l,n){const i=o("InputBase");return u(),d(i,{class:"input-text",value:l.value,name:t.name,label:t.label,icon:e.icon,iconSize:"s",error:n.realError,placeholder:e.placeholder,autocomplete:e.autocomplete,pattern:e.pattern,disabled:t.disabled,"allow-read-only":e.readOnly,type:e.inputType,onInput:n.input,onChange:n.change,onKeydown:n.enterPressed},null,8,["value","name","label","icon","error","placeholder","autocomplete","pattern","disabled","allow-read-only","type","onInput","onChange","onKeydown"])}const g={components:{InputBase:p},mixins:[h,f],props:{initialValue:{type:[String,Number],default:null},placeholder:{type:String,default:null},autocomplete:{type:String,default:null},pattern:{type:String,default:null},icon:{type:String,default:null},iconVariant:{type:String,default:"fa-solid"},customError:{type:String,default:null},inputType:{type:String,default:"text",validator:t=>["text","tel","email","number"].includes(t)},customType:{type:String,default:null},readOnly:{type:Boolean,default:!1}},data(){return{value:""}},computed:{isValid(){return this.disabled?!0:this.customError?!1:this.validation?this.validation.isValid:!0},realError(){return this.customError?this.customError:this.shouldShowErrors?this.errorMessage:null}},methods:{input(t){this.value=this.formatInput(t.target.value),this.$emit("input",this.value),this.validate()},change(){this.dirty=!0,this.$emit("change",this.value)},enterPressed(t){this.keyPressed=t.keyCode,this.keyPressed===13&&this.$emit("enterPressed",this.value)},setFocus(t){this.disabled||(this.focus=t)},formatInput(t){const r=[8,46];switch(this.customType){case"datetext":return r.includes(this.keyPressed)?t:this.formatDate(t);default:return t}}}},x=c(g,[["render",y]]);export{x as I};
