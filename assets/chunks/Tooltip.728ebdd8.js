import{o as r,c as d,x as h,D as f,z as u,H as g,n as m,a0 as x,t as w,A as a,L as v,T as y,r as T,_ as W}from"./framework.1ccf76a1.js";import"./Tooltip.vue_vue_type_style_index_0_lang.4ed993c7.js";const p={insertBody(t){document.body.insertBefore(t,document.body.firstChild)},removeBody(t){document.body.removeChild(t)},changePosition(t,e,o){let s=0,l=0,i=0;const n=window.pageYOffset||document.documentElement.scrollTop;return t.getBoundingClientRect().top+300>=window.innerHeight?o?s=t.getBoundingClientRect().top-e.clientHeight+n:s=t.getBoundingClientRect().top-e.clientHeight+t.clientHeight+n:s=o?t.getBoundingClientRect().top+t.clientHeight+n+5:t.getBoundingClientRect().top+n,l=t.getBoundingClientRect().left,i=t.offsetWidth,{left:`${l}px`,top:`${s}px`,width:`${i}px`}}},_={class:"tooltip"},H={key:0,class:"tooltip__title"},R=["innerHTML"],b=["src"];function B(t,e,o,s,l,i){return r(),d("div",_,[h("div",{class:"tooltip__reference",ref:"convstooltip",onMouseleave:e[0]||(e[0]=(...n)=>i.mouseleavex&&i.mouseleavex(...n)),onMouseenter:e[1]||(e[1]=(...n)=>i.mouseenterx&&i.mouseenterx(...n)),onClick:e[2]||(e[2]=(...n)=>i.toggleVisible&&i.toggleVisible(...n))},[f(y,{name:"tooltip-fade"},{default:u(()=>[g(h("div",{class:m(["tooltip__wrapper",i.tooltipWrapperClasses]),ref:"vstooltip",style:x(i.style)},[o.title?(r(),d("h4",H,w(o.title),1)):a("",!0),h("span",{innerHTML:o.text},null,8,R),o.img?(r(),d("img",{key:1,class:"tooltip__image",src:o.img},null,8,b)):a("",!0)],6),[[v,i.tooltipVisible]])]),_:1}),T(t.$slots,"default")],544)])}const c=8,C=220,k={name:"Tooltip",props:{title:{default:null,type:[String,Number]},text:{default:null,type:[String,Number]},img:{default:null,type:String},position:{default:"top",type:String,validator:t=>["top","right","bottom","left"].includes(t)},delay:{default:"0s",type:[Number,String]},showTooltip:{type:Boolean,default:!0},openOnClick:{type:Boolean,default:!1}},data:()=>({cords:{},active:!1,clicked:!1,widthx:"auto",positionx:null,noneAfter:!1,mountedTooltip:!1}),computed:{tooltipWrapperClasses(){const t=[`tooltip__wrapper--${this.positionx||this.position}`];return this.noneAfter&&t.push("after-none"),t},style(){return{left:this.cords.left,top:this.cords.top,transitionDelay:this.active?this.delay:"0s",width:this.widthx}},tooltipVisible(){return this.active||this.clicked}},beforeUnmount(){this.active=!1,this.clicked=!1,this.mountedTooltip&&p.removeBody(this.$refs.vstooltip)},methods:{mouseenterx(){this.showTooltip&&(this.active=!0,this.$nextTick(()=>{p.insertBody(this.$refs.vstooltip),this.mountedTooltip=!0,requestAnimationFrame(()=>{this.changePosition(this.$refs.convstooltip,this.$refs.vstooltip)})}))},mouseleavex(){this.active=!1},toggleVisible(){!this.showTooltip||!this.openOnClick||(this.clicked=!this.clicked)},changePosition(t,e){this.noneAfter=!1,this.positionx=null;const o=t.closest(".tooltip__reference"),s={clientRect:o.getBoundingClientRect(),clientHeight:o.clientHeight,clientWidth:o.clientWidth},l={clientHeight:e.clientHeight,clientWidth:e.clientWidth},{leftx:i,topx:n}=this.calculateCoordinates(s,l);this.cords={left:`${i}px`,top:`${n}px`,width:`${s.clientWidth}px`},this.changeMaxTooltipWidth(s)},calculateCoordinates(t,e){const o=window.pageYOffset||document.documentElement.scrollTop,s=window.innerWidth;return{top:()=>({topx:t.clientRect.top+o-e.clientHeight-c,leftx:t.clientRect.left-e.clientWidth/2+t.clientWidth/2}),bottom:()=>({topx:t.clientRect.top+o+t.clientHeight+c,leftx:t.clientRect.left-e.clientWidth/2+t.clientWidth/2}),left:()=>{const i=t.clientRect.left-e.clientWidth-c;return Math.sign(i)===-1?(this.positionx="bottom",this.noneAfter=!0,{topx:t.clientRect.top+o+t.clientHeight+c,leftx:t.clientRect.left}):{topx:t.clientRect.top+o+t.clientHeight/2-e.clientHeight/2,leftx:i}},right:()=>{const i=t.clientRect.left+t.clientWidth+c;return s-(i+e.clientWidth)<=20?(this.positionx="bottom",this.noneAfter=!0,{topx:t.clientRect.top+o+t.clientHeight+c,leftx:t.clientRect.left-e.clientWidth/2-10}):{topx:t.clientRect.top+o+t.clientHeight/2-e.clientHeight/2,leftx:i}}}[this.position]()},changeMaxTooltipWidth(t){if(this.widthx!=="auto"||this.position!=="top"&&this.position!=="bottom")return;const e=(window.innerWidth-Math.round(t.clientRect.left)-Math.round(t.clientWidth/2))*2;e<C&&(this.widthx=`${e}px`,this.$nextTick(()=>{this.changePosition(this.$refs.convstooltip,this.$refs.vstooltip)}))}}},A=W(k,[["render",B]]);export{A as T};
